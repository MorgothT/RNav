<Page x:Name="page"
    x:Class="Mapper_v1.Views.ChartsPage"
    Style="{DynamicResource MahApps.Styles.Page}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:model="clr-namespace:Mapper_v1.Models"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:properties="clr-namespace:Mapper_v1.Properties"
    xmlns:help="clr-namespace:Mapper_v1.Helpers"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeave">
            <i:InvokeCommandAction Command="{Binding SaveChartsCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Page.Resources>
        <DataTemplate DataType="{x:Type model:ChartItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="EnabledCheckbox" IsChecked="{Binding Enabled}" Margin="3,0" Grid.Column="0"/>
                <TextBlock Text="{Binding Path}" Grid.Column="1" VerticalAlignment="Center"/>
                <Expander x:Name="LabelExp" Grid.Column="2" Header="Label">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:ChangePropertyAction PropertyName="IsExpanded" Value="false"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel>
                            <DockPanel Name="AttributeName">
                                <TextBlock Text="Attribute:" Margin="2"/>
                                <TextBox Text="{Binding LabelAttributeName}" MinWidth="80" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel Name="FontSize">
                                <TextBlock Text="Font Size:" Margin="{StaticResource SmallRightMargin}" VerticalAlignment="Center"/>
                                <metro:NumericUpDown Interval="1" Value="{Binding LabelFontSize}" ButtonsAlignment="Opposite"
                                             Width="80" Minimum="1" Maximum="100" TextAlignment="Center" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel Name="HorizontalAlignment">
                                <TextBlock Text="Horizontal:" Margin="{StaticResource SmallRightMargin}" VerticalAlignment="Center"/>
                                <ComboBox ItemsSource="{help:Enum model:HorizontalAlignmentEnum}" SelectedItem="{Binding HorizontalAlignment}" 
                                      VerticalAlignment="Center" Width="80" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel Name="VerticalAlignment">
                                <TextBlock Text="Vertical:" Margin="{StaticResource SmallRightMargin}" VerticalAlignment="Center"/>
                                <ComboBox ItemsSource="{help:Enum model:VerticalAlignmentEnum}" SelectedItem="{Binding VerticalAlignment}" 
                                      VerticalAlignment="Center" Width="80" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel Name="LabelColor">
                                <TextBlock Text="Text:" Margin="{StaticResource SmallRightMargin}" VerticalAlignment="Center"/>
                                <metro:ColorPicker Background="{x:Null}" SelectedColor="{Binding LabelColor}" MaxWidth="50" 
                                   Margin="{DynamicResource XSmallLeftMargin}" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel Name="BackroundColor">
                                <TextBlock Text="Backround:" Margin="{StaticResource SmallRightMargin}" VerticalAlignment="Center"/>
                                <metro:ColorPicker Background="{x:Null}" SelectedColor="{Binding BackroundColor}" MaxWidth="50" 
                                   Margin="{DynamicResource XSmallLeftMargin}" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel Name="HaloColor">
                                <TextBlock Text="Halo:" Margin="{StaticResource SmallRightMargin}" VerticalAlignment="Center"/>
                                <metro:ColorPicker Background="{x:Null}" SelectedColor="{Binding HaloColor}" MaxWidth="50" 
                                   Margin="{DynamicResource XSmallLeftMargin}" HorizontalAlignment="Right"/>
                            </DockPanel>
                        </StackPanel>
                </Expander>
                <Expander Grid.Column="3" Header="Vector">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:ChangePropertyAction PropertyName="IsExpanded" Value="false"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel>

                        <DockPanel Name="Opacity">
                            <TextBlock Text="Opacity:" Margin="2"/>
                            <Slider x:Name="OpacitySlider" Value="{Binding Opacity}" Width="100" VerticalAlignment="Center" HorizontalAlignment="Right" Minimum="0" Maximum="1" TickFrequency="0.1" TickPlacement="BottomRight" SmallChange="0.05" LargeChange="0.3" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="2"
                                Margin="2"/>
                        </DockPanel>
                        <metro:NumericUpDown Interval="1" Value="{Binding LineWidth}" ButtonsAlignment="Opposite"
                                             Margin="2" MaxWidth="30" Minimum="1" TextAlignment="Center"/>
                        <DockPanel>
                            <TextBlock Text="Line:" Margin="2" VerticalAlignment="Center"/>
                            <metro:ColorPicker Background="{x:Null}" SelectedColor="{Binding LineColor}" MaxWidth="50" 
                                   Margin="{DynamicResource XSmallLeftMargin}" HorizontalAlignment="Right"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="Outline:" Margin="2" VerticalAlignment="Center"/>
                            <metro:ColorPicker Background="{x:Null}" SelectedColor="{Binding OutlineColor}" MaxWidth="50" 
                                   Margin="{DynamicResource XSmallLeftMargin}" HorizontalAlignment="Right"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="Fill:" Margin="2" VerticalAlignment="Center"/>
                            <metro:ColorPicker Background="{x:Null}" SelectedColor="{Binding FillColor}" MaxWidth="50" 
                                   Margin="{DynamicResource XSmallLeftMargin}" HorizontalAlignment="Right"/>
                        </DockPanel>
                    </StackPanel>
                </Expander>
                
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <TextBlock
            Style="{StaticResource PageTitleStyle}"
            Margin="{StaticResource MediumLeftMargin}"
            Text="{x:Static properties:Resources.ChartsPageTitle}" />
        <Grid
            Grid.Row="1"
            Margin="{StaticResource MediumLeftRightMargin}"
            Background="{DynamicResource MahApps.Brushes.Gray10}">
            <!--
            The Mahapps Gray10 color represents where you should place your content.
            Place your content here.
            -->
            <Grid>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ListView x:Name="ChartTable"
                          IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding MapSettings.ChartItems}"
                          SelectedItem="{Binding SelectedChart}"
                          Grid.Column="0">
                    
                </ListView>
                <StackPanel Orientation="Vertical"
                            Grid.Column="1">
                    <Button Command="{Binding AddChartCommand}" Padding="0,0,0,0" Margin="5">
                        <Label fa:Awesome.Content="PlusSquare"
                               FontSize="{StaticResource XLargeFontSize}" 
                               Foreground="Green"/>
                    </Button>
                    <Button Command="{Binding RemoveChartCommand}" Padding="0,0,0,0" Margin="5">
                        <Label fa:Awesome.Content="MinusSquare"
                               FontSize="{StaticResource XLargeFontSize}" 
                               Foreground="Red"/>
                    </Button>
                    <Button Command="{Binding MoveTopCommand}" Padding="0,0,0,0" Margin="5">
                        <Label fa:Awesome.Content="AngleDoubleUp"
                               FontSize="{StaticResource XLargeFontSize}"/>
                    </Button>
                    <Button Command="{Binding MoveUpCommand}" Padding="0,0,0,0" Margin="5">
                        <Label fa:Awesome.Content="AngleUp"
                               FontSize="{StaticResource XLargeFontSize}"/>
                    </Button>
                    <Button Command="{Binding MoveDownCommand}" Padding="0,0,0,0" Margin="5">
                        <Label fa:Awesome.Content="AngleDown"
                               FontSize="{StaticResource XLargeFontSize}"/>
                    </Button>
                    <Button Command="{Binding MoveButtomCommand}" Padding="0,0,0,0" Margin="5">
                        <Label fa:Awesome.Content="AngleDoubleDown"
                               FontSize="{StaticResource XLargeFontSize}"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Page>
